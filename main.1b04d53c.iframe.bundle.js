(self.webpackChunkleetcode_storybook=self.webpackChunkleetcode_storybook||[]).push([[179],{"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./.yarn/__virtual__/@storybook-client-api-virtual-a8312d9d28/0/cache/@storybook-client-api-npm-6.5.9-c3b4358cc1-90c8f84615.zip/node_modules/@storybook/client-api/dist/esm/ClientApi.js");__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.promise.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/web.dom-collections.iterator.js");"test"!==__webpack_require__("./.yarn/cache/process-npm-0.11.10-aeb3b641ae-bfcce49814.zip/node_modules/process/browser.js").env.BABEL_ENV&&Promise.all([__webpack_require__.e(798),__webpack_require__.e(85)]).then(__webpack_require__.bind(__webpack_require__,"./.storybook/highligher.js"));var parameters={viewMode:"docs",previewTabs:{canvas:{hidden:!0}},actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},badgesConfig:{array:{styles:{backgroundColor:"transparent",borderColor:"#59728c",color:"#59728c"},title:"array"},"hash-table":{styles:{backgroundColor:"transparent",borderColor:"#4f8ecd",color:"#4f8ecd"},title:"hash-table"},"linked-list":{styles:{backgroundColor:"transparent",borderColor:"#d21347",color:"#d21347"},title:"linked-list"},math:{styles:{backgroundColor:"transparent",borderColor:"#080733",color:"#080733"},title:"math"},"two-pointers":{styles:{backgroundColor:"transparent",borderColor:"#372076",color:"#372076"},title:"two-pointers"},string:{styles:{backgroundColor:"transparent",borderColor:"#1160d5",color:"#1160d5"},title:"string"},"sliding-window":{styles:{backgroundColor:"transparent",borderColor:"#6f64bf",color:"#6f64bf"},title:"sliding-window"},"binary-search":{styles:{backgroundColor:"transparent",borderColor:"#f47078",color:"#f47078"},title:"binary-search"},"divide-and-conquer":{styles:{backgroundColor:"transparent",borderColor:"#0949ae",color:"#0949ae"},title:"divide-and-conquer"},"dynamic-programming":{styles:{backgroundColor:"transparent",borderColor:"#4b6c55",color:"#4b6c55"},title:"dynamic-programming"},backtracking:{styles:{backgroundColor:"transparent",borderColor:"#9e4c64",color:"#9e4c64"},title:"backtracking"},stack:{styles:{backgroundColor:"transparent",borderColor:"#88c28a",color:"#88c28a"},title:"stack"},heap:{styles:{backgroundColor:"transparent",borderColor:"#eccd30",color:"#eccd30"},title:"heap"},greedy:{styles:{backgroundColor:"transparent",borderColor:"#a01039",color:"#a01039"},title:"greedy"},sort:{styles:{backgroundColor:"transparent",borderColor:"#9ef535",color:"#9ef535"},title:"sort"},"bit-manipulation":{styles:{backgroundColor:"transparent",borderColor:"#5da0dd",color:"#5da0dd"},title:"bit-manipulation"},tree:{styles:{backgroundColor:"transparent",borderColor:"#9e7336",color:"#9e7336"},title:"tree"},"depth-first-search":{styles:{backgroundColor:"transparent",borderColor:"#2fc6e2",color:"#2fc6e2"},title:"depth-first-search"},"breadth-first-search":{styles:{backgroundColor:"transparent",borderColor:"#2662ca",color:"#2662ca"},title:"breadth-first-search"},"union-find":{styles:{backgroundColor:"transparent",borderColor:"#f7a986",color:"#f7a986"},title:"union-find"},graph:{styles:{backgroundColor:"transparent",borderColor:"#4ec1e0",color:"#4ec1e0"},title:"graph"},design:{styles:{backgroundColor:"transparent",borderColor:"#bec169",color:"#bec169"},title:"design"},"topological-sort":{styles:{backgroundColor:"transparent",borderColor:"#9c3b19",color:"#9c3b19"},title:"topological-sort"},trie:{styles:{backgroundColor:"transparent",borderColor:"#1a7436",color:"#1a7436"},title:"trie"},"binary-indexed-tree":{styles:{backgroundColor:"transparent",borderColor:"#469d6c",color:"#469d6c"},title:"binary-indexed-tree"},"segment-tree":{styles:{backgroundColor:"transparent",borderColor:"#f87d1e",color:"#f87d1e"},title:"segment-tree"},"line-sweep":{styles:{backgroundColor:"transparent",borderColor:"#d32bfa",color:"#d32bfa"},title:"line-sweep"},"ordered-map":{styles:{backgroundColor:"transparent",borderColor:"#fc13e7",color:"#fc13e7"},title:"ordered-map"},recursion:{styles:{backgroundColor:"transparent",borderColor:"#62637c",color:"#62637c"},title:"recursion"},brainteaser:{styles:{backgroundColor:"transparent",borderColor:"#c6fc26",color:"#c6fc26"},title:"brainteaser"},minimax:{styles:{backgroundColor:"transparent",borderColor:"#ad8d73",color:"#ad8d73"},title:"minimax"},memoization:{styles:{backgroundColor:"transparent",borderColor:"#ea394a",color:"#ea394a"},title:"memoization"},queue:{styles:{backgroundColor:"transparent",borderColor:"#11196f",color:"#11196f"},title:"queue"},"reservoir-sampling":{styles:{backgroundColor:"transparent",borderColor:"#855f8c",color:"#855f8c"},title:"reservoir-sampling"},geometry:{styles:{backgroundColor:"transparent",borderColor:"#720808",color:"#720808"},title:"geometry"},random:{styles:{backgroundColor:"transparent",borderColor:"#c3e412",color:"#c3e412"},title:"random"},"rejection-sampling":{styles:{backgroundColor:"transparent",borderColor:"#2b4173",color:"#2b4173"},title:"rejection-sampling"},"binary-search-tree":{styles:{backgroundColor:"transparent",borderColor:"#d79c5c",color:"#d79c5c"},title:"binary-search-tree"},adobe:{styles:{backgroundColor:"transparent",borderColor:"#ef0986",color:"#ef0986"},title:"adobe"},airbnb:{styles:{backgroundColor:"transparent",borderColor:"#0c0883",color:"#0c0883"},title:"airbnb"},amazon:{styles:{backgroundColor:"transparent",borderColor:"#0406b4",color:"#0406b4"},title:"amazon"},apple:{styles:{backgroundColor:"transparent",borderColor:"#5a838b",color:"#5a838b"},title:"apple"},bloomberg:{styles:{backgroundColor:"transparent",borderColor:"#3b229d",color:"#3b229d"},title:"bloomberg"},dropbox:{styles:{backgroundColor:"transparent",borderColor:"#7c34c8",color:"#7c34c8"},title:"dropbox"},facebook:{styles:{backgroundColor:"transparent",borderColor:"#c69aa1",color:"#c69aa1"},title:"facebook"},linkedin:{styles:{backgroundColor:"transparent",borderColor:"#fe9035",color:"#fe9035"},title:"linkedin"},microsoft:{styles:{backgroundColor:"transparent",borderColor:"#ee3062",color:"#ee3062"},title:"microsoft"},uber:{styles:{backgroundColor:"transparent",borderColor:"#faab36",color:"#faab36"},title:"uber"},yahoo:{styles:{backgroundColor:"transparent",borderColor:"#40c8d6",color:"#40c8d6"},title:"yahoo"},yelp:{styles:{backgroundColor:"transparent",borderColor:"#908938",color:"#908938"},title:"yelp"},google:{styles:{backgroundColor:"transparent",borderColor:"#395e13",color:"#395e13"},title:"google"},zenefits:{styles:{backgroundColor:"transparent",borderColor:"#a41399",color:"#a41399"},title:"zenefits"},twitter:{styles:{backgroundColor:"transparent",borderColor:"#73aa61",color:"#73aa61"},title:"twitter"},pocketgems:{styles:{backgroundColor:"transparent",borderColor:"#9a3509",color:"#9a3509"},title:"pocketgems"},snapchat:{styles:{backgroundColor:"transparent",borderColor:"#228ef3",color:"#228ef3"},title:"snapchat"},twosigma:{styles:{backgroundColor:"transparent",borderColor:"#59a7fd",color:"#59a7fd"},title:"twosigma"},baidu:{styles:{backgroundColor:"transparent",borderColor:"#1bae92",color:"#1bae92"},title:"baidu"},palantir:{styles:{backgroundColor:"transparent",borderColor:"#952196",color:"#952196"},title:"palantir"},ebay:{styles:{backgroundColor:"transparent",borderColor:"#95652f",color:"#95652f"},title:"ebay"},indeed:{styles:{backgroundColor:"transparent",borderColor:"#85ef69",color:"#85ef69"},title:"indeed"},mathworks:{styles:{backgroundColor:"transparent",borderColor:"#7a3901",color:"#7a3901"},title:"mathworks"},alibaba:{styles:{backgroundColor:"transparent",borderColor:"#5c7f7d",color:"#5c7f7d"},title:"alibaba"},zappos:{styles:{backgroundColor:"transparent",borderColor:"#8bbfba",color:"#8bbfba"},title:"zappos"}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./src/DataStructure/Array/1D/DominantIndex/DominantIndex.problem.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResetWrapper:()=>ResetWrapper,__page:()=>__page,default:()=>DominantIndex_problem,withReset:()=>withReset});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),index_b45716e8=__webpack_require__("./.yarn/__virtual__/@storybook-components-virtual-e01d4e8c03/0/cache/@storybook-components-npm-6.5.9-17d7449baf-f14ee528a4.zip/node_modules/@storybook/components/dist/esm/index-b45716e8.js"),theming_dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-theming-virtual-1ebdd0dc6a/0/cache/@storybook-theming-npm-6.5.9-5a3d56c921-0c0d034864.zip/node_modules/@storybook/theming/dist/esm/index.js"),index_modern=__webpack_require__("./.yarn/__virtual__/markdown-to-jsx-virtual-9a42d50b99/0/cache/markdown-to-jsx-npm-7.1.7-2cb4f4a90f-b2c0ea7d09.zip/node_modules/markdown-to-jsx/dist/index.modern.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const withReset=({theme})=>({fontFamily:theme.typography.fonts.base,fontSize:theme.typography.size.s3,margin:0,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",WebkitOverflowScrolling:"touch"}),ResetWrapper=theming_dist_esm.zo.div(withReset),layoutProps={withReset,ResetWrapper};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Problem",parameters:{badges:["array","dynamic-programming"]},mdxType:"Meta"}),(0,esm.kt)(ResetWrapper,{mdxType:"ResetWrapper"},(0,esm.kt)(index_modern.Z,{options:{forceBlock:!0,overrides:{...index_b45716e8.B,code:void 0}},mdxType:"Markdown"},"# [Largest Number At Least Twice of Others](https://leetcode.com/problems/largest-number-at-least-twice-of-others/description/)\n\n| Category | Difficulty | Likes | Dislikes |\n| :------: | :--------: | :---: | :------: |\n| algorithms | Easy (45.20%) | 666 | 753 |\n\n<details>\n  <summary><strong>Tags</strong></summary>\n\n  [array](https://leetcode.com/tag/array) | [dynamic-programming](https://leetcode.com/tag/dynamic-programming)\n\n</details>\n\n<details>\n  <summary><strong>Companies</strong></summary>\n\n  \n\n</details>\n<br />\n<p>You are given an integer array <code>nums</code> where the largest integer is <strong>unique</strong>.</p>\n\n<p>Determine whether the largest element in the array is <strong>at least twice</strong> as much as every other number in the array. If it is, return <em>the <strong>index</strong> of the largest element, or return </em><code>-1</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [3,6,1,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 4 is less than twice the value of 3, so we return -1.</code></pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> 1 is trivially at least twice the value as any other number because there are no other numbers.</code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n  <li><code>1 &lt;= nums.length &lt;= 50</code></li>\n  <li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n  <li>The largest element in <code>nums</code> is unique.</li>\n</ul>\n\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Problem",parameters:{badges:["array","dynamic-programming"]},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const DominantIndex_problem=componentMeta},"./src/DataStructure/Array/1D/DominantIndex/javascript/DominantIndex.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>DominantIndex_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),dominantIndex_es3=__webpack_require__("./src/DataStructure/Array/1D/DominantIndex/javascript/dominantIndex.es3.cjs"),dominantIndex_es3_default=__webpack_require__.n(dominantIndex_es3);const dominantIndex_es3raw_namespaceObject="/*\n * @lc app=leetcode id=747 lang=javascript\n *\n * [747] Largest Number At Least Twice of Others\n */\n\n// @lc code=start\n\n/**\n * @param {number[]} nums\n * @return {number}\n */\nfunction dominantIndex(nums) {\n  var i;\n  var largestNum = -1;\n  var largestIndex = -1;\n  var num;\n  for (i = 0; i < nums.length; i += 1) {\n    num = nums[i];\n    if (largestNum < num) {\n      largestNum = num;\n      largestIndex = i;\n    }\n  }\n  for (i = 0; i < nums.length; i += 1) {\n    if (i !== largestIndex && 2 * nums[i] > largestNum) return -1;\n  }\n  return largestIndex;\n}\n\n// @lc code=end\n\nmodule.exports = dominantIndex;\n",testCases_namespaceObject=JSON.parse('[{"input":[3,6,1,0],"expected":1},{"input":[1,2,3,4],"expected":-1},{"input":[1],"expected":0}]');const testCases=function(runSolution,_ref){return runSolution(_ref.input)};function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0=testCases_namespaceObject[0],layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Solution/Javascript",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./dominantIndex.es3.cjs")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:dominantIndex_es3raw_namespaceObject}}},mdxType:"Story"},(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(dominantIndex_es3_default(),c0)))))),(0,esm.kt)("h3",null,"Explanation"),(0,esm.kt)("p",null,"We first find the largest number with its index using a simple for loop on the unsorted list."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var i;\nvar largestNum = -1;\nvar largestIndex = -1;\nvar num;\nfor (i = 0; i < nums.length; i += 1) {\n  num = nums[i];\n  if (largestNum < num) {\n    largestNum = num;\n    largestIndex = i;\n  }\n}\n")),(0,esm.kt)("p",null,"Then in the second for loop, compare the largest number at ",(0,esm.kt)("inlineCode",{parentName:"p"},"largestIndex"),". If there is at least a number that is not twice the largest number, we exit the loop. Also be sure to avoid evaluating at the largestIndex."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"for (i = 0; i < nums.length; i += 1) {\n  if (i !== largestIndex && 2 * nums[i] > largestNum) return -1;\n}\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(dominantIndex_es3_default(),c0)))));case0.storyName="Case 0",case0.parameters={storySource:{source:"<div>\n      <div>Input: </div>\n      <div>{JSON.stringify(c0.input)}</div>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <div>{JSON.stringify(runTestCase(solution, c0))}</div>\n    </div>"},docs:{source:{code:dominantIndex_es3raw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Solution/Javascript",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const DominantIndex_solution=componentMeta},"./src/DataStructure/Array/1D/DominantIndex/python/DominantIndex.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>DominantIndex_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");const dominantIndexfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/DominantIndex/python/dominantIndex.py",dominantIndexraw_namespaceObject="from typing import List\r\n\r\n#\r\n# @lc app=leetcode id=747 lang=python3\r\n#\r\n# [747] Largest Number At Least Twice of Others\r\n#\r\n\r\n# @lc code=start\r\n\r\n\r\nclass Solution:\r\n    def dominantIndex(self, nums: List[int]) -> int:\r\n        largestNum = -1\r\n        for i, num in enumerate(nums):\r\n            if (largestNum < num):\r\n                largestNum = num\r\n                largestIndex = i\r\n        for i, num in enumerate(nums):\r\n            if (i != largestIndex and 2 * nums[i] > largestNum):\r\n                return -1\r\n        return largestIndex\r\n\r\n# @lc code=end\r\n",testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/DominantIndex/testCases.json",python_testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/DominantIndex/python/testCases.py";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0="cases[0]",layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Solution/Python",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./dominantIndex.py")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:dominantIndexraw_namespaceObject}}},inline:!1,height:"130px",mdxType:"Story"},(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${dominantIndexfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from dominantIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.dominantIndex, ${c0}))\n      `)))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${dominantIndexfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from dominantIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.dominantIndex, ${c0}))\n      `)));case0.storyName="Case 0",case0.parameters={storySource:{source:"<py-env>\n    {`\n      - paths:\n        - ${json}\n        - ${testCases}\n        - ${solution}\n    `}\n    </py-env>\n<div>\n      <div>Input: </div>\n      <py-script>\n      {`\n        from testCases import cases\n        print(${c0}['input'])\n      `}\n      </py-script>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <py-script>\n      {`\n        from testCases import cases, runTestCase\n        from dominantIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.dominantIndex, ${c0}))\n      `}\n      </py-script>\n    </div>"},docs:{source:{code:dominantIndexraw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[747] Largest Number At Least Twice of Others/Solution/Python",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const DominantIndex_solution=componentMeta},"./src/DataStructure/Array/1D/PivotIndex/PivotIndex.problem.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResetWrapper:()=>ResetWrapper,__page:()=>__page,default:()=>PivotIndex_problem,withReset:()=>withReset});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),index_b45716e8=__webpack_require__("./.yarn/__virtual__/@storybook-components-virtual-e01d4e8c03/0/cache/@storybook-components-npm-6.5.9-17d7449baf-f14ee528a4.zip/node_modules/@storybook/components/dist/esm/index-b45716e8.js"),theming_dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-theming-virtual-1ebdd0dc6a/0/cache/@storybook-theming-npm-6.5.9-5a3d56c921-0c0d034864.zip/node_modules/@storybook/theming/dist/esm/index.js"),index_modern=__webpack_require__("./.yarn/__virtual__/markdown-to-jsx-virtual-9a42d50b99/0/cache/markdown-to-jsx-npm-7.1.7-2cb4f4a90f-b2c0ea7d09.zip/node_modules/markdown-to-jsx/dist/index.modern.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const withReset=({theme})=>({fontFamily:theme.typography.fonts.base,fontSize:theme.typography.size.s3,margin:0,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",WebkitOverflowScrolling:"touch"}),ResetWrapper=theming_dist_esm.zo.div(withReset),layoutProps={withReset,ResetWrapper};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[724] Find Pivot Index/Problem",parameters:{badges:["array"]},mdxType:"Meta"}),(0,esm.kt)(ResetWrapper,{mdxType:"ResetWrapper"},(0,esm.kt)(index_modern.Z,{options:{forceBlock:!0,overrides:{...index_b45716e8.B,code:void 0}},mdxType:"Markdown"},'# [Find Pivot Index](https://leetcode.com/problems/find-pivot-index/description/)\n\n| Category | Difficulty | Likes | Dislikes |\n| :------: | :--------: | :---: | :------: |\n| algorithms | Easy (51.64%) | 3152 | 371 |\n\n<details>\n  <summary><strong>Tags</strong></summary>\n\n  [array](https://leetcode.com/tag/array)\n\n</details>\n\n<details>\n  <summary><strong>Companies</strong></summary>\n\n  \n\n</details>\n<br />\n<p>Given an array of integers <code>nums</code>, calculate the <strong>pivot index</strong> of this array.</p>\n\n<p>The <strong>pivot index</strong> is the index where the sum of all the numbers <strong>strictly</strong> to the left of the index is equal to the sum of all the numbers <strong>strictly</strong> to the index\'s right.</p>\n\n<p>If the index is on the left edge of the array, then the left sum is <code>0</code> because there are no elements to the left. This also applies to the right edge of the array.</p>\n\n<p>Return <em>the <strong>leftmost pivot index</strong></em>. If no such index exists, return -1.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [1,7,3,6,5,6]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nThe pivot index is 3.\nLeft sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11\nRight sum = nums[4] + nums[5] = 5 + 6 = 11</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nThere is no index that satisfies the conditions in the problem statement.</code></pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><code><strong>Input:</strong> nums = [2,1,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nThe pivot index is 0.\nLeft sum = 0 (no elements to the left of index 0)\nRight sum = nums[1] + nums[2] = 1 + -1 = 0</code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n  <li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n  <li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as&nbsp;1991:&nbsp;<a href="https://leetcode.com/problems/find-the-middle-index-in-array/" target="_blank">https://leetcode.com/problems/find-the-middle-index-in-array/</a></p>\n\n')))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Data Structure/Array/1D/[724] Find Pivot Index/Problem",parameters:{badges:["array"]},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PivotIndex_problem=componentMeta},"./src/DataStructure/Array/1D/PivotIndex/javascript/PivotIndex.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>PivotIndex_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),pivotIndex_es3=__webpack_require__("./src/DataStructure/Array/1D/PivotIndex/javascript/pivotIndex.es3.cjs"),pivotIndex_es3_default=__webpack_require__.n(pivotIndex_es3);const pivotIndex_es3raw_namespaceObject="/*\n * @lc app=leetcode id=724 lang=javascript\n *\n * [724] Find Pivot Index\n */\n\n// @lc code=start\n\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar pivotIndex = function (nums) {\n  var i;\n  var total = 0;\n  var left = 0;\n  var right;\n  for (i = 0; i < nums.length; i += 1) {\n    total += nums[i];\n  }\n  for (i = 0; i < nums.length; i += 1) {\n    right = total - nums[i] - left;\n    if (left === right) {\n      return i;\n    }\n    left += nums[i];\n  }\n  return -1;\n};\n\n// @lc code=end\n\nmodule.exports = pivotIndex;\n",testCases_namespaceObject=JSON.parse('[{"input":[1,7,3,6,5,6],"expected":3},{"input":[1,2,3],"expected":-1},{"input":[2,1,-1],"expected":0}]');const testCases=function runTestCase(findPivot,_ref){return findPivot(_ref.input)};function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0=testCases_namespaceObject[0],layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[724] Find Pivot Index/Solution/Javascript",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./pivotIndex.es3.cjs")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:pivotIndex_es3raw_namespaceObject}}},mdxType:"Story"},(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(pivotIndex_es3_default(),c0)))))),(0,esm.kt)("h2",null,"Explanation"),(0,esm.kt)("p",null,"To find a O(n) time algorithm, we partition the ",(0,esm.kt)("inlineCode",{parentName:"p"},"total")," sum of the number list ",(0,esm.kt)("inlineCode",{parentName:"p"},"nums")," at every pivot index."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var total = 0; // we will partition this value\nfor (i = 0; i < nums.length; i += 1) {\n  total += nums[i];\n}\n")),(0,esm.kt)("p",null,"For example, at pivot ",(0,esm.kt)("inlineCode",{parentName:"p"},"i"),", the ",(0,esm.kt)("inlineCode",{parentName:"p"},"right")," sum is equal to the ",(0,esm.kt)("inlineCode",{parentName:"p"},"total")," minus the pivot value (",(0,esm.kt)("inlineCode",{parentName:"p"},"nums[i]"),") and ",(0,esm.kt)("inlineCode",{parentName:"p"},"left")," sum."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"right = total - nums[i] - left;\n")),(0,esm.kt)("p",null,"Left is the sum of numbers before ",(0,esm.kt)("inlineCode",{parentName:"p"},"nums[i]"),". For the left sum, we can accumulate after each partition."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"for (i = 0; i < nums.length; i += 1) {\n  right = total - nums[i] - left;\n  left += nums[i];\n}\n")),(0,esm.kt)("p",null,"Don't forget to initialize the left sum to 0."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var left = 0;\n")),(0,esm.kt)("p",null,"Each time we calculate the right sum, we can compare against the left. If it is equal, we passed our search's condition. Else, the loop finishes and we return -1."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"for (i = 0; i < nums.length; i += 1) {\n  right = total - nums[i] - left;\n  /*\n  if (left === right) {\n    return i;\n  }\n  */\n  left += nums[i];\n  /*\n  return -1;\n  */\n}\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(pivotIndex_es3_default(),c0)))));case0.storyName="Case 0",case0.parameters={storySource:{source:"<div>\n      <div>Input: </div>\n      <div>{JSON.stringify(c0.input)}</div>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <div>{JSON.stringify(runTestCase(solution, c0))}</div>\n    </div>"},docs:{source:{code:pivotIndex_es3raw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[724] Find Pivot Index/Solution/Javascript",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PivotIndex_solution=componentMeta},"./src/DataStructure/Array/1D/PivotIndex/python/PivotIndex.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>PivotIndex_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");const pivotIndexfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PivotIndex/python/pivotIndex.py",pivotIndexraw_namespaceObject="from typing import List\n\n#\n# @lc app=leetcode id=724 lang=python3\n#\n# [724] Find Pivot Index\n#\n\n# @lc code=start\n\n\nclass Solution:\n    def pivotIndex(self, nums: List[int]) -> int:\n        total = sum(nums)\n        left = 0\n        for i in range(len(nums)):\n            right = total - nums[i] - left\n            if left == right:\n                return i\n            left += nums[i]\n        return -1\n\n# @lc code=end\n",testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PivotIndex/testCases.json",python_testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PivotIndex/python/testCases.py";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0="cases[0]",layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[724] Find Pivot Index/Solution/Python",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./pivotIndex.py")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:pivotIndexraw_namespaceObject}}},inline:!1,height:"130px",mdxType:"Story"},(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${pivotIndexfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from pivotIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.pivotIndex, ${c0}))\n      `)))),(0,esm.kt)("h2",null,"Explanation"),(0,esm.kt)("p",null,"To find a O(n) time algorithm, we partition the ",(0,esm.kt)("inlineCode",{parentName:"p"},"total")," sum of the number list ",(0,esm.kt)("inlineCode",{parentName:"p"},"nums")," at every pivot index."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"total = sum(nums) # we will partition this value\n")),(0,esm.kt)("p",null,"For example, at pivot ",(0,esm.kt)("inlineCode",{parentName:"p"},"i"),", the ",(0,esm.kt)("inlineCode",{parentName:"p"},"right")," sum is equal to the ",(0,esm.kt)("inlineCode",{parentName:"p"},"total")," minus the pivot value (",(0,esm.kt)("inlineCode",{parentName:"p"},"nums[i]"),") and ",(0,esm.kt)("inlineCode",{parentName:"p"},"left")," sum."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"right = total - nums[i] - left\n")),(0,esm.kt)("p",null,"Left is the sum of numbers before ",(0,esm.kt)("inlineCode",{parentName:"p"},"nums[i]"),". For the left sum, we can accumulate after each partition."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"for i in range(len(nums)):\n  right = total - nums[i] - left\n  left += nums[i]\n")),(0,esm.kt)("p",null,"Which means the very first left sum is 0. Lets initialize it outside the loop."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"left = 0\n# loop after...\n")),(0,esm.kt)("p",null,"Each time we calculate the right sum, we can compare against the left. If it is equal, we passed our search's condition. Else, the loop finishes and we return -1."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"for i in range(len(nums)):\n  right = total - nums[i] - left\n  # if (left == right) return i\n  left += nums[i]\n# return -1\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${pivotIndexfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from pivotIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.pivotIndex, ${c0}))\n      `)));case0.storyName="Case 0",case0.parameters={storySource:{source:"<py-env>\n    {`\n      - paths:\n        - ${json}\n        - ${testCases}\n        - ${solution}\n    `}\n    </py-env>\n<div>\n      <div>Input: </div>\n      <py-script>\n      {`\n        from testCases import cases\n        print(${c0}['input'])\n      `}\n      </py-script>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <py-script>\n      {`\n        from testCases import cases, runTestCase\n        from pivotIndex import Solution\n        solution = Solution()\n        print(runTestCase(solution.pivotIndex, ${c0}))\n      `}\n      </py-script>\n    </div>"},docs:{source:{code:pivotIndexraw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[724] Find Pivot Index/Solution/Python",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PivotIndex_solution=componentMeta},"./src/DataStructure/Array/1D/PlusOne/PlusOne.problem.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResetWrapper:()=>ResetWrapper,__page:()=>__page,default:()=>PlusOne_problem,withReset:()=>withReset});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),index_b45716e8=__webpack_require__("./.yarn/__virtual__/@storybook-components-virtual-e01d4e8c03/0/cache/@storybook-components-npm-6.5.9-17d7449baf-f14ee528a4.zip/node_modules/@storybook/components/dist/esm/index-b45716e8.js"),theming_dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-theming-virtual-1ebdd0dc6a/0/cache/@storybook-theming-npm-6.5.9-5a3d56c921-0c0d034864.zip/node_modules/@storybook/theming/dist/esm/index.js"),index_modern=__webpack_require__("./.yarn/__virtual__/markdown-to-jsx-virtual-9a42d50b99/0/cache/markdown-to-jsx-npm-7.1.7-2cb4f4a90f-b2c0ea7d09.zip/node_modules/markdown-to-jsx/dist/index.modern.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const withReset=({theme})=>({fontFamily:theme.typography.fonts.base,fontSize:theme.typography.size.s3,margin:0,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",WebkitOverflowScrolling:"touch"}),ResetWrapper=theming_dist_esm.zo.div(withReset),layoutProps={withReset,ResetWrapper};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[66] Plus One/Problem",parameters:{badges:["array","google"]},mdxType:"Meta"}),(0,esm.kt)(ResetWrapper,{mdxType:"ResetWrapper"},(0,esm.kt)(index_modern.Z,{options:{forceBlock:!0,overrides:{...index_b45716e8.B,code:void 0}},mdxType:"Markdown"},"# [Plus One](https://leetcode.com/problems/plus-one/description/)\n\n| Category | Difficulty | Likes | Dislikes |\n| :------: | :--------: | :---: | :------: |\n| algorithms | Easy (42.80%) | 4055 | 4098 |\n\n<details>\n  <summary><strong>Tags</strong></summary>\n\n  [array](https://leetcode.com/tag/array)\n\n</details>\n\n<details>\n  <summary><strong>Companies</strong></summary>\n\n  google\n\n</details>\n<br />\n<p>You are given a <strong>large integer</strong> represented as an integer array <code>digits</code>, where each <code>digits[i]</code> is the <code>i<sup>th</sup></code> digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading <code>0</code>'s.</p>\n\n<p>Increment the large integer by one and return <em>the resulting array of digits</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><code><strong>Input:</strong> digits = [1,2,3]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong> The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><code><strong>Input:</strong> digits = [4,3,2,1]\n<strong>Output:</strong> [4,3,2,2]\n<strong>Explanation:</strong> The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].</code></pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><code><strong>Input:</strong> digits = [9]\n<strong>Output:</strong> [1,0]\n<strong>Explanation:</strong> The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].</code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n  <li><code>1 &lt;= digits.length &lt;= 100</code></li>\n  <li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n  <li><code>digits</code> does not contain any leading <code>0</code>'s.</li>\n</ul>\n\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Data Structure/Array/1D/[66] Plus One/Problem",parameters:{badges:["array","google"]},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PlusOne_problem=componentMeta},"./src/DataStructure/Array/1D/PlusOne/javascript/PlusOne.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>PlusOne_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),plusOne_es3=__webpack_require__("./src/DataStructure/Array/1D/PlusOne/javascript/plusOne.es3.cjs"),plusOne_es3_default=__webpack_require__.n(plusOne_es3);const plusOne_es3raw_namespaceObject="/*\n * @lc app=leetcode id=66 lang=javascript\n *\n * [66] Plus One\n */\n\n// @lc code=start\n/**\n * @param {number[]} digits\n * @return {number[]}\n */\nfunction plusOne(digits) {\n  var i;\n  var digit;\n  var temp;\n  for (i = digits.length - 1; i >= 0; i -= 1) {\n    digit = digits[i];\n    if (digit === 9) {\n      digits[i] = 0;\n    } else {\n      digits[i] = digit + 1;\n      return digits;\n    }\n  }\n  // shift digits to right by 1\n  digits.push(1);\n  for (i = 0; i < digits.length - 1; i += 1) {\n    temp = digits[i + 1];\n    digits[i + 1] = digits[i];\n  }\n  digits[0] = temp;\n  return digits;\n}\n// @lc code=end\n\nmodule.exports = plusOne;\n",testCases_namespaceObject=JSON.parse('[{"input":[1,2,3],"expected":[1,2,4]},{"input":[4,3,2,1],"expected":[4,3,2,2]},{"input":[9],"expected":[1,0]}]');const testCases=function(runSolution,_ref){return runSolution(_ref.input)};function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0=testCases_namespaceObject[0],layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[66] Plus One/Solution/Javascript",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./plusOne.es3.cjs")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:plusOne_es3raw_namespaceObject}}},mdxType:"Story"},(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(plusOne_es3_default(),c0)))))),(0,esm.kt)("h2",null,"Explanation"),(0,esm.kt)("p",null,"To increment the far right digit, we should refer to the last index of the array. For example, the following adds 1 to the last digit."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"digits[digits.length - 1] += 1\n")),(0,esm.kt)("p",null,"However, we have to handle the case where the right most digit is a 9. In this case we need to increment the previous digit instead. For example,"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var lastIndex = digits.length - 1;\ndigits[lastIndex] = 0; // reset to 0\ndigits[lastIndex - 1] += 1;\n")),(0,esm.kt)("p",null,"We should check all cases of digit where there is a 9, for instance 999 + 1 = 1000. Note, there are more consecutive 9s to reset. Therefore, we require a reverse iteration until a digit is not 9."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var i = 0;\nfor (i = digits.length - 1; i >= 0; i -= 1) { // i, from last index to 0\n  digit = digits[i];\n  if (digit === 9) {\n    digits[i] = 0;\n  } else { // if not a 9, plus 1 and return\n    digits[i] = digit + 1;\n    break; //return digits;\n  }\n}\n")),(0,esm.kt)("p",null,"Note in the case we can add 1 to a digit (e.g. 19 + 1 = 20, means we do not require shifting), the function should return the result. For the input 999, we also expect to shift the digits array by 1 and add 1 to the beginning."),(0,esm.kt)("p",null,"First, increase the digits array length by 1."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"digits.push(1);\n")),(0,esm.kt)("p",null,"Starting from left to right of the original array (0 to ",(0,esm.kt)("inlineCode",{parentName:"p"},"digits.length - 1"),"), store the next value in a temp variable and move the current value to the next position."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"digits.push(1);\nfor (i = 0; i < digits.length - 1; i += 1) {\n  temp = digits[i + 1]; // i + 1, is the next position\n  digits[i + 1] = digits[i];\n}\n")),(0,esm.kt)("p",null,"Running the above loop for digit 9: 9 -> 91 -> 99. We are not done yet! The last step is swapping the beginning digit with the temp (last saved digit)."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"digits[0] = temp; // or // digits[0] = 1\n")),(0,esm.kt)("p",null,"Our algorithm should generate 9 + 1 = 10 or 99 + 1 = 100 or 999 + 1 = 1000."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(plusOne_es3_default(),c0)))));case0.storyName="Case 0",case0.parameters={storySource:{source:"<div>\n      <div>Input: </div>\n      <div>{JSON.stringify(c0.input)}</div>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <div>{JSON.stringify(runTestCase(solution, c0))}</div>\n    </div>"},docs:{source:{code:plusOne_es3raw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[66] Plus One/Solution/Javascript",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PlusOne_solution=componentMeta},"./src/DataStructure/Array/1D/PlusOne/python/PlusOne.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>PlusOne_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");const plusOnefile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PlusOne/python/plusOne.py",plusOneraw_namespaceObject="from typing import List\n\n#\n# @lc app=leetcode id=66 lang=python3\n#\n# [66] Plus One\n#\n\n# @lc code=start\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        for i in range(len(digits)):\n            index = -i - 1\n            if digits[index] == 9:\n                digits[index] = 0\n            else:\n                digits[index] += 1\n                return digits\n        digits.insert(0, 1)\n        return digits\n\n# @lc code=end\n",testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PlusOne/testCases.json",python_testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/1D/PlusOne/python/testCases.py";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0="cases[0]",layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/1D/[66] Plus One/Solution/Python",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./plusOne.py")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:plusOneraw_namespaceObject}}},inline:!1,height:"130px",mdxType:"Story"},(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${plusOnefile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from plusOne import Solution\n        solution = Solution()\n        print(runTestCase(solution.plusOne, ${c0}))\n      `)))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${plusOnefile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from plusOne import Solution\n        solution = Solution()\n        print(runTestCase(solution.plusOne, ${c0}))\n      `)));case0.storyName="Case 0",case0.parameters={storySource:{source:"<py-env>\n    {`\n      - paths:\n        - ${json}\n        - ${testCases}\n        - ${solution}\n    `}\n    </py-env>\n<div>\n      <div>Input: </div>\n      <py-script>\n      {`\n        from testCases import cases\n        print(${c0}['input'])\n      `}\n      </py-script>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <py-script>\n      {`\n        from testCases import cases, runTestCase\n        from plusOne import Solution\n        solution = Solution()\n        print(runTestCase(solution.plusOne, ${c0}))\n      `}\n      </py-script>\n    </div>"},docs:{source:{code:plusOneraw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/1D/[66] Plus One/Solution/Python",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const PlusOne_solution=componentMeta},"./src/DataStructure/Array/2D/FindDiagonalOrder/FindDiagonalOrder.problem.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResetWrapper:()=>ResetWrapper,__page:()=>__page,default:()=>FindDiagonalOrder_problem,withReset:()=>withReset});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),index_b45716e8=__webpack_require__("./.yarn/__virtual__/@storybook-components-virtual-e01d4e8c03/0/cache/@storybook-components-npm-6.5.9-17d7449baf-f14ee528a4.zip/node_modules/@storybook/components/dist/esm/index-b45716e8.js"),theming_dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-theming-virtual-1ebdd0dc6a/0/cache/@storybook-theming-npm-6.5.9-5a3d56c921-0c0d034864.zip/node_modules/@storybook/theming/dist/esm/index.js"),index_modern=__webpack_require__("./.yarn/__virtual__/markdown-to-jsx-virtual-9a42d50b99/0/cache/markdown-to-jsx-npm-7.1.7-2cb4f4a90f-b2c0ea7d09.zip/node_modules/markdown-to-jsx/dist/index.modern.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const withReset=({theme})=>({fontFamily:theme.typography.fonts.base,fontSize:theme.typography.size.s3,margin:0,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",WebkitOverflowScrolling:"touch"}),ResetWrapper=theming_dist_esm.zo.div(withReset),layoutProps={withReset,ResetWrapper};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/2D/[498] Diagonal Traverse/Problem",parameters:{badges:["google"]},mdxType:"Meta"}),(0,esm.kt)(ResetWrapper,{mdxType:"ResetWrapper"},(0,esm.kt)(index_modern.Z,{options:{forceBlock:!0,overrides:{...index_b45716e8.B,code:void 0}},mdxType:"Markdown"},'# [Diagonal Traverse](https://leetcode.com/problems/diagonal-traverse/description/)\n\n| Category | Difficulty | Likes | Dislikes |\n| :------: | :--------: | :---: | :------: |\n| algorithms | Medium (56.62%) | 2137 | 529 |\n\n<details>\n  <summary><strong>Tags</strong></summary>\n\n  \n\n</details>\n\n<details>\n  <summary><strong>Companies</strong></summary>\n\n  google\n\n</details>\n<br />\n<p>Given an <code>m x n</code> matrix <code>mat</code>, return <em>an array of all the elements of the array in a diagonal order</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt="" src="https://assets.leetcode.com/uploads/2021/04/10/diag1-grid.jpg" style="width: 334px; height: 334px;" />\n<pre><code><strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,2,4,7,5,3,6,8,9]</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><code><strong>Input:</strong> mat = [[1,2],[3,4]]\n<strong>Output:</strong> [1,2,3,4]</code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n  <li><code>m == mat.length</code></li>\n  <li><code>n == mat[i].length</code></li>\n  <li><code>1 &lt;= m, n &lt;= 10<sup>4</sup></code></li>\n  <li><code>1 &lt;= m * n &lt;= 10<sup>4</sup></code></li>\n  <li><code>-10<sup>5</sup> &lt;= mat[i][j] &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n')))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Data Structure/Array/2D/[498] Diagonal Traverse/Problem",parameters:{badges:["google"]},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const FindDiagonalOrder_problem=componentMeta},"./src/DataStructure/Array/2D/FindDiagonalOrder/javascript/FindDiagonalOrder.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>FindDiagonalOrder_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),findDiagonalOrder_es3=__webpack_require__("./src/DataStructure/Array/2D/FindDiagonalOrder/javascript/findDiagonalOrder.es3.cjs"),findDiagonalOrder_es3_default=__webpack_require__.n(findDiagonalOrder_es3);const findDiagonalOrder_es3raw_namespaceObject="/*\n * @lc app=leetcode id=498 lang=javascript\n *\n * [498] Diagonal Traverse\n */\n\n// @lc code=start\n/**\n * @param {number[][]} mat\n * @return {number[]}\n */\nfunction findDiagonalOrder(mat) {\n  var m = mat.length;\n  var n = mat[0].length;\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k;\n  var a = -1;\n  var b = 1;\n  if (m === 1) {\n    for (i = 0; i < n; i += 1) {\n      result.push(mat[0][i]);\n    }\n    return result;\n  }\n  if (n === 1) {\n    for (i = 0; i < m; i += 1) {\n      result.push(mat[i][0]);\n    }\n    return result;\n  }\n  result.push(mat[i][j]);\n  for (k = 1; k < m * n; k += 1) {\n    i += a;\n    j += b;\n    if (i === m) {\n      a *= -1;\n      b *= -1;\n      i -= 1;\n      j += 2;\n    } else if (j === n) {\n      a *= -1;\n      b *= -1;\n      i += 2;\n      j -= 1;\n    } else if (i < 0) {\n      a *= -1;\n      b *= -1;\n      i += 1;\n    } else if (j < 0) {\n      a *= -1;\n      b *= -1;\n      j += 1;\n    }\n    result.push(mat[i][j]);\n  }\n  return result;\n}\n// @lc code=end\n\nmodule.exports = findDiagonalOrder;\n";var cases=JSON.parse('[{"input":[[1,2,3],[4,5,6],[7,8,9]],"expected":[1,2,4,7,5,3,6,8,9]},{"input":[[1,2],[3,4]],"expected":[1,2,3,4]},{"input":[[2,5],[8,4],[0,-1]],"expected":[2,5,8,0,4,-1]},{"input":[[1],[2],[3],[4],[5],[6],[7],[8],[9],[10]],"expected":[1,2,3,4,5,6,7,8,9,10]},{"input":[[1,2,3,4,5,6,7,8,9,10]],"expected":[1,2,3,4,5,6,7,8,9,10]},{"input":[[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]],"expected":[1,2,5,9,6,3,4,7,10,13,14,11,8,12,15,16]}]');const testCases=function(runSolution,_ref){return runSolution(_ref.input)};const example_namespaceObject=__webpack_require__.p+"static/media/example.47ca9d19.png";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0=cases[0],layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/2D/[498] Diagonal Traverse/Solution/Javascript",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./findDiagonalOrder.es3.cjs")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:findDiagonalOrder_es3raw_namespaceObject}}},mdxType:"Story"},(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.mat))),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(findDiagonalOrder_es3_default(),c0)))))),(0,esm.kt)("h2",null,"Explanation"),(0,esm.kt)("p",null,"This approach follows what the program ask of us. Using the example array bellow, we can observe:"),(0,esm.kt)("img",{src:example_namespaceObject,alt:"example"}),(0,esm.kt)("ol",null,(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"Starting from (0, 0), the next position is (0, 1)")),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"Similiar to incrementing a 1D array, we want to move in a predictable direction. In the first case, it is right and up (1, -1)."),(0,esm.kt)("p",{parentName:"li"},"Lets define the inital index variables for position (0, 0)."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var i = 0;\nvar j = 0;\n")),(0,esm.kt)("p",{parentName:"li"},"We also define the iteration loop and the flatten result array. We will step every case (k) in the 2D Matrix based on the direction (a, b) and store it in the flatten result array. The length of the matrix or M * N."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"var m = mat.length;\nvar n = mat[0].length;\nvar result = [];\nvar i = 1; // initial direction\nvar j = -1; // initial direction\nvar k;\nvar a; // increment constant for i\nvar b; // increment constant for j\nfor (k = 0; k < m * n; k += 1) {\n  i += a;\n  j += b;\n  result.push(mat[i][j]; // store each number\n}\n"))),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"The constant ",(0,esm.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"b")," will be dynamic, based on the four corners of the matrix as seen in the example. In some cases, we inverse the increment constant(s) or direction because the indices ",(0,esm.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"j")," are out of bounds."),(0,esm.kt)("p",{parentName:"li"},"If we ran our second case ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 1"),", the iteration code will increment ",(0,esm.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"j")," initally to -1 and 1. When ",(0,esm.kt)("inlineCode",{parentName:"p"},"i")," is out of bounds, we should inverse (a, b) and revert:"),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (i < 0) {\n  a *= -1; // inverse by negating\n  b *= -1; // inverse by negating\n  i += 1; // revert\n}\n"))),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"What about when ",(0,esm.kt)("inlineCode",{parentName:"p"},"j")," is less than 0 for case ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 3"),", changing (1, 0) to (2, -1)? Then we should inverse (a, b) and revert ",(0,esm.kt)("inlineCode",{parentName:"p"},"j")," as well."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (j < 0) {\n  a *= -1; // inverse by negating\n  b *= -1; // inverse by negating\n  j += 1; // revert\n}\n"))),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"There some cases which the above condition logic will not work. For example, when ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 9")," (changing (3, 0) to (4, -1)). Notice, both ",(0,esm.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"j")," are out of bounds. We cannot run the above logic in order because we will revert also the direction twice or back to the original. Therefore we require a seperate logic, we can define the condition when ",(0,esm.kt)("inlineCode",{parentName:"p"},"i === m"),"."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (i === m) {\n  a *= -1;\n  b *= -1;\n  i -= 1;\n  j += 1;\n}\n")),(0,esm.kt)("p",{parentName:"li"},"Note the above code also doesn't give what we want. (4, -1) changes to (3, 0). Which is our original case for ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 9")," that was already visited. Thus, we should move an addditonal step."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (i === m) {\n  a *= -1;\n  b *= -1;\n  i -= 1; // revert\n  j += 2; // move an additional step to the right\n}\n"))),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"Also when ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 14")," (changing (0, 4) to (-1, 5)). Similiarily we inverse the direction. In this case, only ",(0,esm.kt)("inlineCode",{parentName:"p"},"i")," needs to move a additonal step down."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (j === m) {\n  a *= -1;\n  b *= -1;\n  i += 2; // move an additional step down\n  j -= 1; // revert\n}\n"))),(0,esm.kt)("li",{parentName:"ol"},(0,esm.kt)("p",{parentName:"li"},"Putting all the conditions together, we should process ",(0,esm.kt)("inlineCode",{parentName:"p"},"i < 0")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"j < 0")," as lowest priority, as what we seen with cases ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 9")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"k = 14")," (both would pass the conditions as well)."),(0,esm.kt)("pre",{parentName:"li"},(0,esm.kt)("code",{parentName:"pre",className:"language-js"},"if (i === m) {\n  a *= -1;\n  b *= -1;\n  i -= 1;\n  j += 2;\n} else if (j === n) {\n  a *= -1;\n  b *= -1;\n  i += 2;\n  j -= 1;\n} else if (i < 0) {\n  a *= -1;\n  b *= -1;\n  i += 1;\n} else if (j < 0) {\n  a *= -1;\n  b *= -1;\n  j += 1;\n}\n")))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.mat))),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(findDiagonalOrder_es3_default(),c0)))));case0.storyName="Case 0",case0.parameters={storySource:{source:"<div>\n      <div>Input: </div>\n      <div>{JSON.stringify(c0.mat)}</div>\n    </div>\n<div>\n      <div>Output: </div>\n      <div>{JSON.stringify(runTestCase(solution, c0))}</div>\n    </div>"},docs:{source:{code:findDiagonalOrder_es3raw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/2D/[498] Diagonal Traverse/Solution/Javascript",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const FindDiagonalOrder_solution=componentMeta},"./src/DataStructure/Array/2D/FindDiagonalOrder/python/FindDiagonalOrder.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>FindDiagonalOrder_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");const findDiagonalOrderfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/2D/FindDiagonalOrder/python/findDiagonalOrder.py",findDiagonalOrderraw_namespaceObject="from typing import List\r\n\r\n#\r\n# @lc app=leetcode id=498 lang=python3\r\n#\r\n# [498] Diagonal Traverse\r\n#\r\n\r\n# @lc code=start\r\n\r\n\r\nclass Solution:\r\n    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:\r\n        M = len(mat)\r\n        N = len(mat[0])\r\n        i = 0\r\n        result = []\r\n        for d in range(M + N - 1):\r\n            i = 0 if d < N else i + 1\r\n            j = d if d < N else N - 1\r\n            diagonal = []\r\n            diagonal.append(mat[i][j])\r\n            for row in range(i + 1, M):\r\n                j -= 1\r\n                if (j < 0):\r\n                    break\r\n                diagonal.append(mat[row][j])\r\n            if (d % 2 == 0):\r\n                result.extend(reversed(diagonal))\r\n            else:\r\n                result.extend(diagonal)\r\n        return result\r\n# @lc code=end\r\n",testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/2D/FindDiagonalOrder/testCases.json",python_testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/Array/2D/FindDiagonalOrder/python/testCases.py";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0="cases[0]",layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Array/2D/[498] Diagonal Traverse/Solution/Python",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./findDiagonalOrder.py")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:findDiagonalOrderraw_namespaceObject}}},inline:!1,height:"130px",mdxType:"Story"},(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${findDiagonalOrderfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from findDiagonalOrder import Solution\n        solution = Solution()\n        print(runTestCase(solution.findDiagonalOrder, ${c0}))\n      `)))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${findDiagonalOrderfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from findDiagonalOrder import Solution\n        solution = Solution()\n        print(runTestCase(solution.findDiagonalOrder, ${c0}))\n      `)));case0.storyName="Case 0",case0.parameters={storySource:{source:"<py-env>\n    {`\n      - paths:\n        - ${json}\n        - ${testCases}\n        - ${solution}\n    `}\n    </py-env>\n<div>\n      <div>Input: </div>\n      <py-script>\n      {`\n        from testCases import cases\n        print(${c0}['input'])\n      `}\n      </py-script>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <py-script>\n      {`\n        from testCases import cases, runTestCase\n        from findDiagonalOrder import Solution\n        solution = Solution()\n        print(runTestCase(solution.findDiagonalOrder, ${c0}))\n      `}\n      </py-script>\n    </div>"},docs:{source:{code:findDiagonalOrderraw_namespaceObject}}};const componentMeta={title:"Data Structure/Array/2D/[498] Diagonal Traverse/Solution/Python",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const FindDiagonalOrder_solution=componentMeta},"./src/DataStructure/LinkedList/MyLinkedList/MyLinkedList.problem.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResetWrapper:()=>ResetWrapper,__page:()=>__page,default:()=>MyLinkedList_problem,withReset:()=>withReset});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),index_b45716e8=__webpack_require__("./.yarn/__virtual__/@storybook-components-virtual-e01d4e8c03/0/cache/@storybook-components-npm-6.5.9-17d7449baf-f14ee528a4.zip/node_modules/@storybook/components/dist/esm/index-b45716e8.js"),theming_dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-theming-virtual-1ebdd0dc6a/0/cache/@storybook-theming-npm-6.5.9-5a3d56c921-0c0d034864.zip/node_modules/@storybook/theming/dist/esm/index.js"),index_modern=__webpack_require__("./.yarn/__virtual__/markdown-to-jsx-virtual-9a42d50b99/0/cache/markdown-to-jsx-npm-7.1.7-2cb4f4a90f-b2c0ea7d09.zip/node_modules/markdown-to-jsx/dist/index.modern.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const withReset=({theme})=>({fontFamily:theme.typography.fonts.base,fontSize:theme.typography.size.s3,margin:0,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",WebkitOverflowScrolling:"touch"}),ResetWrapper=theming_dist_esm.zo.div(withReset),layoutProps={withReset,ResetWrapper};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Linked List/[707] Design Linked List/Problem",parameters:{badges:[""]},mdxType:"Meta"}),(0,esm.kt)(ResetWrapper,{mdxType:"ResetWrapper"},(0,esm.kt)(index_modern.Z,{options:{forceBlock:!0,overrides:{...index_b45716e8.B,code:void 0}},mdxType:"Markdown"},"# [Design Linked List](https://leetcode.com/problems/design-linked-list/description/)\n\n| Category | Difficulty | Likes | Dislikes |\n| :------: | :--------: | :---: | :------: |\n| algorithms | Medium (27.00%) | 1586 | 1230 |\n\n<details>\n  <summary><strong>Tags</strong></summary>\n\n  \n\n</details>\n\n<details>\n  <summary><strong>Companies</strong></summary>\n\n  \n\n</details>\n<br />\n\n<p>Design your implementation of the linked list. You can choose to use a singly or doubly linked list.<br />\nA node in a singly linked list should have two attributes: <code>val</code> and <code>next</code>. <code>val</code> is the value of the current node, and <code>next</code> is a pointer/reference to the next node.<br />\nIf you want to use the doubly linked list, you will need one more attribute <code>prev</code> to indicate the previous node in the linked list. Assume all nodes in the linked list are <strong>0-indexed</strong>.</p>\n\n<p>Implement the <code>MyLinkedList</code> class:</p>\n\n<ul>\n  <li><code>MyLinkedList()</code> Initializes the <code>MyLinkedList</code> object.</li>\n  <li><code>int get(int index)</code> Get the value of the <code>index<sup>th</sup></code> node in the linked list. If the index is invalid, return <code>-1</code>.</li>\n  <li><code>void addAtHead(int val)</code> Add a node of value <code>val</code> before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.</li>\n  <li><code>void addAtTail(int val)</code> Append a node of value <code>val</code> as the last element of the linked list.</li>\n  <li><code>void addAtIndex(int index, int val)</code> Add a node of value <code>val</code> before the <code>index<sup>th</sup></code> node in the linked list. If <code>index</code> equals the length of the linked list, the node will be appended to the end of the linked list. If <code>index</code> is greater than the length, the node <strong>will not be inserted</strong>.</li>\n  <li><code>void deleteAtIndex(int index)</code> Delete the <code>index<sup>th</sup></code> node in the linked list, if the index is valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><code><strong>Input</strong>\n[&quot;MyLinkedList&quot;, &quot;addAtHead&quot;, &quot;addAtTail&quot;, &quot;addAtIndex&quot;, &quot;get&quot;, &quot;deleteAtIndex&quot;, &quot;get&quot;]\n[[], [1], [3], [1, 2], [1], [1], [1]]\n<strong>Output</strong>\n[null, null, null, null, 2, null, 3]\n\n<strong>Explanation</strong>\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1-&gt;2-&gt;3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1-&gt;3\nmyLinkedList.get(1);              // return 3</code></pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n  <li><code>0 &lt;= index, val &lt;= 1000</code></li>\n  <li>Please do not use the built-in LinkedList library.</li>\n  <li>At most <code>2000</code> calls will be made to <code>get</code>, <code>addAtHead</code>, <code>addAtTail</code>, <code>addAtIndex</code> and <code>deleteAtIndex</code>.</li>\n</ul>\n\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Data Structure/Linked List/[707] Design Linked List/Problem",parameters:{badges:[""]},includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const MyLinkedList_problem=componentMeta},"./src/DataStructure/LinkedList/MyLinkedList/javascript/MyLinkedList.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>MyLinkedList_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js"),MyLinkedList_es3=__webpack_require__("./src/DataStructure/LinkedList/MyLinkedList/javascript/MyLinkedList.es3.cjs"),MyLinkedList_es3_default=__webpack_require__.n(MyLinkedList_es3);const MyLinkedList_es3raw_namespaceObject="/*\n * @lc app=leetcode id=707 lang=javascript\n *\n * [707] Design Linked List\n */\n\n// @lc code=start\n\nvar Node = function Node(val, next) {\n  this.val = val;\n  this.next = next || null;\n};\n\nvar MyLinkedList = function MyLinkedList() {\n  this.head = null;\n};\n\n/**\n * @param {number} index\n * @return {number}\n */\nMyLinkedList.prototype.get = function get(index) {\n  var i;\n  var ptr;\n  for (i = 0, ptr = this.head; ptr != null; ptr = ptr.next) {\n    if (index === i) {\n      return ptr.val;\n    }\n    i += 1;\n  }\n  return -1;\n};\n\n/**\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtHead = function addAtHead(val) {\n  if (this.head === null) {\n    this.head = new Node(val);\n  } else {\n    this.head = new Node(val, this.head);\n  }\n  return null;\n};\n\n/**\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtTail = function addAtTail(val) {\n  var prev;\n  var ptr;\n  if (this.head === null) {\n    this.addAtHead(val);\n  } else {\n    for (prev = this.head, ptr = prev.next; ptr != null; prev = ptr, ptr = ptr.next);\n    prev.next = new Node(val);\n  }\n  return null;\n};\n\n/**\n * @param {number} index\n * @param {number} val\n * @return {void}\n */\nMyLinkedList.prototype.addAtIndex = function addAtIndex(index, val) {\n  var i;\n  var prev;\n  var ptr;\n  var node;\n  if (index === 0) return this.addAtHead(val);\n  if (this.head === null) return null;\n  for (i = 1, prev = this.head, ptr = prev.next; ptr != null; i += 1, prev = ptr, ptr = ptr.next) {\n    if (index === i) break;\n  }\n  if (index <= (i + 1)) {\n    node = new Node(val);\n    prev.next = node;\n    node.next = ptr;\n  }\n  return null;\n};\n\n/**\n * @param {number} index\n * @return {void}\n */\nMyLinkedList.prototype.deleteAtIndex = function deleteAtIndex(index) {\n  var i;\n  var prev;\n  var ptr;\n  if (this.head === null) {\n    return null;\n  }\n  if (index === 0) {\n    this.head = this.head.next;\n    return null;\n  }\n  for (i = 1, prev = this.head, ptr = prev.next; ptr != null; i += 1, prev = ptr, ptr = ptr.next) {\n    if (index === i) {\n      prev.next = ptr.next;\n      break;\n    }\n  }\n  return null;\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * var obj = new MyLinkedList()\n * var param_1 = obj.get(index)\n * obj.addAtHead(val)\n * obj.addAtTail(val)\n * obj.addAtIndex(index,val)\n * obj.deleteAtIndex(index)\n */\n\nmodule.exports = MyLinkedList;\n";__webpack_require__("./.yarn/cache/core-js-npm-3.23.5-8ae36c9718-0277d46b15.zip/node_modules/core-js/modules/es.array.map.js");const testCases_namespaceObject=JSON.parse('[{"input":["MyLinkedList","addAtHead","addAtTail","addAtIndex","get","deleteAtIndex","get"],"args":[[],[1],[3],[1,2],[1],[1],[1]],"expected":[null,null,null,null,2,null,3]},{"input":["MyLinkedList","addAtHead","deleteAtIndex"],"args":[[],[1],[0]],"expected":[null,null,null]},{"input":["MyLinkedList","addAtHead","addAtHead","addAtHead","addAtIndex","deleteAtIndex","addAtHead","addAtTail","get","addAtHead","addAtIndex","addAtHead"],"args":[[],[7],[2],[1],[3,0],[2],[6],[4],[4],[4],[5,0],[6]],"expected":[null,null,null,null,null,null,null,null,4,null,null,null]},{"input":["MyLinkedList","addAtIndex","addAtIndex","addAtIndex","get"],"args":[[],[0,10],[0,20],[1,30],[0]],"expected":[null,null,null,null,20]},{"input":["MyLinkedList","addAtIndex","get"],"args":[[],[1,0],[0]],"expected":[null,null,-1]}]');const testCases=function(LinkedList,_ref){var input=_ref.input,args=_ref.args,list=new LinkedList;return input.map((function(command,i){var func=LinkedList.prototype[command];return func?func.apply(list,args[i]):null}))};function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0=testCases_namespaceObject[0],layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Linked List/[707] Design Linked List/Solution/Javascript",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./MyLinkedList.es3.cjs")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:MyLinkedList_es3raw_namespaceObject}}},mdxType:"Story"},(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(MyLinkedList_es3_default(),c0)))))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("div",null,JSON.stringify(c0.input))),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("div",null,JSON.stringify(testCases(MyLinkedList_es3_default(),c0)))));case0.storyName="Case 0",case0.parameters={storySource:{source:"<div>\n      <div>Input: </div>\n      <div>{JSON.stringify(c0.input)}</div>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <div>{JSON.stringify(runTestCase(solution, c0))}</div>\n    </div>"},docs:{source:{code:MyLinkedList_es3raw_namespaceObject}}};const componentMeta={title:"Data Structure/Linked List/[707] Design Linked List/Solution/Javascript",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const MyLinkedList_solution=componentMeta},"./src/DataStructure/LinkedList/MyLinkedList/python/MyLinkedList.solution.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{c0:()=>c0,case0:()=>case0,default:()=>MyLinkedList_solution});var react=__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");const MyLinkedListfile_namespaceObject=__webpack_require__.p+"src/DataStructure/LinkedList/MyLinkedList/python/MyLinkedList.py",MyLinkedListraw_namespaceObject="#\n# @lc app=leetcode id=707 lang=python3\n#\n# [707] Design Linked List\n#\n\n# @lc code=start\nclass Node:\n    def __init__(self, val, next=None):\n        self.val = val\n        self.next = next\n\n\nclass MyLinkedList:\n\n    def __init__(self):\n        self.head = None\n\n    def get(self, index: int) -> int:\n        i = 0\n        ptr = self.head\n        while ptr is not None:\n            if index == i:\n                return ptr.val\n            ptr = ptr.next\n            i += 1\n        return -1\n\n    def addAtHead(self, val: int) -> None:\n        if self.head is None:\n            self.head = Node(val)\n        else:\n            self.head = Node(val, self.head)\n\n    def addAtTail(self, val: int) -> None:\n        if self.head is None:\n            self.addAtHead(val)\n        else:\n            prev = self.head\n            ptr = prev.next\n            while ptr is not None:\n                prev = ptr\n                ptr = ptr.next\n            prev.next = Node(val)\n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index == 0:\n            return self.addAtHead(val)\n        if self.head is None:\n            return None\n        i = 1\n        prev = self.head\n        ptr = prev.next\n        while ptr is not None:\n            if index == i:\n                break\n            i += 1\n            prev = ptr\n            ptr = ptr.next\n        if index <= i + 1:\n            node = Node(val)\n            prev.next = node\n            node.next = ptr\n\n    def deleteAtIndex(self, index: int) -> None:\n        if self.head is None:\n            return None\n        if index == 0:\n            self.head = self.head.next\n            return None\n        i = 1\n        prev = self.head\n        ptr = prev.next\n        while ptr is not None:\n            if index == i:\n                prev.next = ptr.next\n                break\n            i += 1\n            prev = ptr\n            ptr = ptr.next\n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)\n# @lc code=en\n",testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/LinkedList/MyLinkedList/testCases.json",python_testCasesfile_namespaceObject=__webpack_require__.p+"src/DataStructure/LinkedList/MyLinkedList/python/testCases.py";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const c0="cases[0]",layoutProps={c0};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Data Structure/Linked List/[707] Design Linked List/Solution/Python",mdxType:"Meta"}),(0,esm.kt)("h1",null,"Solution"),(0,esm.kt)("p",null,"Modify the solution file ",(0,esm.kt)("inlineCode",{parentName:"p"},"./MyLinkedList.py")," to test results."),(0,esm.kt)("h2",null,"Default Case"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",mdxType:"Canvas"},(0,esm.kt)(dist_esm.oG,{name:"Case 0",parameters:{docs:{source:{code:MyLinkedListraw_namespaceObject}}},inline:!1,height:"130px",mdxType:"Story"},(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${MyLinkedListfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from MyLinkedList import MyLinkedList\n        print(runTestCase(MyLinkedList, ${c0}))\n      `)))),(0,esm.kt)("h2",null,"Explanation"),(0,esm.kt)("p",null,"A linked list is a data structure that consist of a collection of nodes."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"class Node:\n    def __init__(self, val, next=None):\n        self.val = val\n        self.next = next\n")),(0,esm.kt)("p",null,"Each node has a value and a pointer to the next ",(0,esm.kt)("inlineCode",{parentName:"p"},"Node")," in the list."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"list = Node(1 Node(2, Node(3)) # 1 -> 2 -> 3 -> None\nprint(list.val) # prints 1\nlist.next #return Node(2, Node(3))\n")),(0,esm.kt)("p",null,"We can represent this structure in a class ",(0,esm.kt)("inlineCode",{parentName:"p"},"MyLinkedList"),", which additionally provides utility actions on the head of the list."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"list = MyLinkedList()\nlist.addToHead(1) #list.head = Node(1)\nlist.addToTail(2) #list.head = Node(1, Node(2))\nlist.addToTail(3) #list.head = Node(1 Node(2, Node(3))\n")),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"class MyLinkedList:\n    def __init__(self): # constructor\n        self.head = None\n")),(0,esm.kt)("p",null,"We can iterate the list by keeping a pointer to the current node and update it with the next Node, until the pointer is empty."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"ptr = list.head\nwhile ptr is not None:\n    ptr = ptr.next\n")),(0,esm.kt)("p",null,"Sometimes we may need to stop iteration, whenever we reach a condition."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"ptr = list.head\nwhile ptr is not None:\n    #if cond():\n        #return # or #break\n    ptr = ptr.next\n")),(0,esm.kt)("p",null,"At times we can assume there is already a head, therefore we initialize the pointer to the next Node."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"ptr = list.head.next\nwhile ptr is not None:\n    ptr = ptr.next\n")),(0,esm.kt)("p",null,"That will be useful in the case where we need to access the previous Node instead of the current."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"prev = list.head\nptr = prev.next # same as #ptr = list.head.next\nwhile ptr is not None:\n    prev = ptr\n    # do something with `prev`\n    ptr = ptr.next\n# do something with `prev`\n")),(0,esm.kt)("blockquote",null,(0,esm.kt)("p",{parentName:"blockquote"},"With the additional pointer ",(0,esm.kt)("inlineCode",{parentName:"p"},"prev"),", we can get last Node in the list after the iteration finishes."),(0,esm.kt)("pre",{parentName:"blockquote"},(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"prev = ptr # pointer will eventually be the last node, when ptr.next is empty\n"))),(0,esm.kt)("h3",null,"Methods"),(0,esm.kt)("h4",null,(0,esm.kt)("inlineCode",{parentName:"h4"},"get(self, index: int)")," -> int"),(0,esm.kt)("p",null,"Returns the value of a node at ",(0,esm.kt)("inlineCode",{parentName:"p"},"index"),". Return ",(0,esm.kt)("inlineCode",{parentName:"p"},"-1")," if out of range."),(0,esm.kt)("h5",null,"Implementation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"def get(self, index: int) -> int:\n    i = 0 # initalize iteration index `i`\n    ptr = self.head\n    while ptr is not None:\n        if index == i:\n            return ptr.val # return the Node value if we reach index `i`\n        ptr = ptr.next\n        i += 1 # increment `i` each time we update the pointer.\n    return -1\n")),(0,esm.kt)("h4",null,(0,esm.kt)("inlineCode",{parentName:"h4"},"addAtHead(self, val: int) -> None")),(0,esm.kt)("p",null,"Create a new Node with ",(0,esm.kt)("inlineCode",{parentName:"p"},"val")," and set it to the head. If there is already a head, make sure to set the ",(0,esm.kt)("inlineCode",{parentName:"p"},"next")," pointer of the new head."),(0,esm.kt)("h5",null,"Implementation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"def addAtHead(self, val: int) -> None:\n    if self.head is None:\n        self.head = Node(val)\n    else:\n        self.head = Node(val, self.head) # `self.head.next` is now the old head\n")),(0,esm.kt)("h4",null,(0,esm.kt)("inlineCode",{parentName:"h4"},"addAtTail(self, val: int) -> None")),(0,esm.kt)("p",null,"If the head is empty, add to the head using ",(0,esm.kt)("inlineCode",{parentName:"p"},"addAtHead(val)"),". Otherwise, iterate assuming an head exists."),(0,esm.kt)("h5",null,"Implementation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"def addAtTail(self, val: int) -> None:\n    if self.head is None:\n        self.addAtHead(val)\n    else:\n        prev = self.head\n        ptr = prev.next\n        while ptr is not None:\n            prev = ptr\n            ptr = ptr.next\n        prev.next = Node(val) # the last Node\n")),(0,esm.kt)("h4",null,(0,esm.kt)("inlineCode",{parentName:"h4"},"addAtIndex(self, index: int, val: int) -> None")),(0,esm.kt)("p",null,"Update ",(0,esm.kt)("inlineCode",{parentName:"p"},"prev.next")," with the new Node at ",(0,esm.kt)("inlineCode",{parentName:"p"},"index == i"),". If ",(0,esm.kt)("inlineCode",{parentName:"p"},"index")," is 0, we reuse ",(0,esm.kt)("inlineCode",{parentName:"p"},"addAtHead(val)"),". If the list is empty, there is no existing data to be modified."),(0,esm.kt)("h5",null,"Implementation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"def addAtIndex(self, index: int, val: int) -> None:\n    if index == 0:\n        return self.addAtHead(val)\n    if self.head is None:\n        return None # do nothing, the list is empty\n    i = 1\n    prev = self.head\n    ptr = prev.next\n    while ptr is not None:\n        if index == i:\n            break # exit early, index is reached\n        i += 1 # increment `i`\n        prev = ptr\n        ptr = ptr.next\n    if index <= i + 1: # check to ensure the index is in range of the list\n        node = Node(val) # new Node\n        prev.next = node # update\n        node.next = ptr # also point the new Node's next (or `ptr` in this case)\n")),(0,esm.kt)("blockquote",null,(0,esm.kt)("p",{parentName:"blockquote"},"For clarity, we could also rewrite the last few lines to:"),(0,esm.kt)("pre",{parentName:"blockquote"},(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"temp = prev.next\nprev.next = node # update\nnode.next = temp\n")),(0,esm.kt)("p",{parentName:"blockquote"},"However, it creates a unnecessary variable ",(0,esm.kt)("inlineCode",{parentName:"p"},"temp"),".")),(0,esm.kt)("h4",null,(0,esm.kt)("inlineCode",{parentName:"h4"},"deleteAtIndex(self, index: int) -> None")),(0,esm.kt)("p",null,"Update ",(0,esm.kt)("inlineCode",{parentName:"p"},"prev.next")," so it no longer points to the Node at ",(0,esm.kt)("inlineCode",{parentName:"p"},"index == i"),". If the Node at ",(0,esm.kt)("inlineCode",{parentName:"p"},"index")," exists, we can point previous's to the deleted next pointer. For deleting a Node at 0, there is no previous Node. Therefore, we can simply replace the head."),(0,esm.kt)("h5",null,"Implementation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-python"},"def deleteAtIndex(self, index: int) -> None:\n    if self.head is None:\n        return None # do nothing, the list is empty\n    if index == 0:\n        self.head = self.head.next # replace the head, it is now the Node next in the list\n        return None\n    i = 1\n    prev = self.head\n    ptr = prev.next\n    while ptr is not None:\n        if index == i:\n            #toDelete = ptr\n            prev.next = ptr.next # point previous's to the deleted next pointer\n            break\n        i += 1 # increment\n        prev = ptr\n        ptr = ptr.next\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const case0=()=>(0,esm.kt)(react.Fragment,null,(0,esm.kt)("py-env",null,`\n      - paths:\n        - ${testCasesfile_namespaceObject}\n        - ${python_testCasesfile_namespaceObject}\n        - ${MyLinkedListfile_namespaceObject}\n    `),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Input: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases\n        print(${c0}['input'])\n      `)),(0,esm.kt)("br",null),(0,esm.kt)("div",null,(0,esm.kt)("div",null,"Output: "),(0,esm.kt)("py-script",null,`\n        from testCases import cases, runTestCase\n        from MyLinkedList import MyLinkedList\n        print(runTestCase(MyLinkedList, ${c0}))\n      `)));case0.storyName="Case 0",case0.parameters={storySource:{source:"<py-env>\n    {`\n      - paths:\n        - ${json}\n        - ${testCases}\n        - ${solution}\n    `}\n    </py-env>\n<div>\n      <div>Input: </div>\n      <py-script>\n      {`\n        from testCases import cases\n        print(${c0}['input'])\n      `}\n      </py-script>\n    </div>\n<br />\n<div>\n      <div>Output: </div>\n      <py-script>\n      {`\n        from testCases import cases, runTestCase\n        from MyLinkedList import MyLinkedList\n        print(runTestCase(MyLinkedList, ${c0}))\n      `}\n      </py-script>\n    </div>"},docs:{source:{code:MyLinkedListraw_namespaceObject}}};const componentMeta={title:"Data Structure/Linked List/[707] Design Linked List/Solution/Python",includeStories:["case0"]},mdxStoryNameToKey={"Case 0":"case0"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))};const MyLinkedList_solution=componentMeta},"./src/README.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>README});__webpack_require__("./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");var esm=__webpack_require__("./.yarn/__virtual__/@mdx-js-react-virtual-4b9c86fdb2/0/cache/@mdx-js-react-npm-1.6.22-57e4c05c2b-bc84bd514b.zip/node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/dist/esm/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)("p",null,(0,esm.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/psychobolt/leetcode-storybook/main/logo.png",alt:"main_logo"})),(0,esm.kt)("h1",{id:"leetcode-storybook"},"LeetCode Storybook"),(0,esm.kt)("p",null,(0,esm.kt)("a",{parentName:"p",href:"https://github.com/psychobolt/eetcode-storybook/actions/workflows/main.yml",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://github.com/psychobolt/leetcode-storybook/actions/workflows/main.yml/badge.svg",alt:"Main workflow"})),"\n",(0,esm.kt)("a",{parentName:"p",href:"https://codecov.io/gh/psychobolt/leetcode-storybook/tree/main/src",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://codecov.io/gh/psychobolt/leetcode-storybook/branch/main/graph/badge.svg",alt:"codecov"}))),(0,esm.kt)("p",null,"A list of solved and curated ",(0,esm.kt)("a",{parentName:"p",href:"https://www.leetcode.com",target:"_blank",rel:"nofollow noopener noreferrer"},"LeetCode")," problems with solutions within ",(0,esm.kt)("a",{parentName:"p",href:"https://storybook.js.org",target:"_blank",rel:"nofollow noopener noreferrer"},"Storybook"),"."),(0,esm.kt)("h2",{id:"development"},"Development"),(0,esm.kt)("p",null,"If you wish contribute to this project, please see ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/psychobolt/leetcode-storybook/blob/master/DEVELOPMENT.md",target:"_blank",rel:"nofollow noopener noreferrer"},"DEVELOPMENT.md")," If you want to build start your LeetCode journey from scratch, see ",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/psychobolt/leetcode-storybook-starter",target:"_blank",rel:"nofollow noopener noreferrer"},"psychobolt/leetcode-storybook-starter"),"."))}function README_extends(){return README_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},README_extends.apply(this,arguments)}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const README_layoutProps={};function README_MDXContent({components,...props}){return(0,esm.kt)("wrapper",README_extends({},README_layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Documentation/Readme",mdxType:"Meta"}),(0,esm.kt)(MDXContent,{mdxType:"Readme"}))}README_MDXContent.displayName="MDXContent",README_MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Documentation/Readme",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(README_MDXContent,null))};const README=componentMeta},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.(problem%7Csolution)\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./DataStructure/Array/1D/DominantIndex/DominantIndex.problem.mdx":"./src/DataStructure/Array/1D/DominantIndex/DominantIndex.problem.mdx","./DataStructure/Array/1D/DominantIndex/javascript/DominantIndex.solution.mdx":"./src/DataStructure/Array/1D/DominantIndex/javascript/DominantIndex.solution.mdx","./DataStructure/Array/1D/DominantIndex/python/DominantIndex.solution.mdx":"./src/DataStructure/Array/1D/DominantIndex/python/DominantIndex.solution.mdx","./DataStructure/Array/1D/PivotIndex/PivotIndex.problem.mdx":"./src/DataStructure/Array/1D/PivotIndex/PivotIndex.problem.mdx","./DataStructure/Array/1D/PivotIndex/javascript/PivotIndex.solution.mdx":"./src/DataStructure/Array/1D/PivotIndex/javascript/PivotIndex.solution.mdx","./DataStructure/Array/1D/PivotIndex/python/PivotIndex.solution.mdx":"./src/DataStructure/Array/1D/PivotIndex/python/PivotIndex.solution.mdx","./DataStructure/Array/1D/PlusOne/PlusOne.problem.mdx":"./src/DataStructure/Array/1D/PlusOne/PlusOne.problem.mdx","./DataStructure/Array/1D/PlusOne/javascript/PlusOne.solution.mdx":"./src/DataStructure/Array/1D/PlusOne/javascript/PlusOne.solution.mdx","./DataStructure/Array/1D/PlusOne/python/PlusOne.solution.mdx":"./src/DataStructure/Array/1D/PlusOne/python/PlusOne.solution.mdx","./DataStructure/Array/2D/FindDiagonalOrder/FindDiagonalOrder.problem.mdx":"./src/DataStructure/Array/2D/FindDiagonalOrder/FindDiagonalOrder.problem.mdx","./DataStructure/Array/2D/FindDiagonalOrder/javascript/FindDiagonalOrder.solution.mdx":"./src/DataStructure/Array/2D/FindDiagonalOrder/javascript/FindDiagonalOrder.solution.mdx","./DataStructure/Array/2D/FindDiagonalOrder/python/FindDiagonalOrder.solution.mdx":"./src/DataStructure/Array/2D/FindDiagonalOrder/python/FindDiagonalOrder.solution.mdx","./DataStructure/LinkedList/MyLinkedList/MyLinkedList.problem.mdx":"./src/DataStructure/LinkedList/MyLinkedList/MyLinkedList.problem.mdx","./DataStructure/LinkedList/MyLinkedList/javascript/MyLinkedList.solution.mdx":"./src/DataStructure/LinkedList/MyLinkedList/javascript/MyLinkedList.solution.mdx","./DataStructure/LinkedList/MyLinkedList/python/MyLinkedList.solution.mdx":"./src/DataStructure/LinkedList/MyLinkedList/python/MyLinkedList.solution.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.(problem%7Csolution)\\.mdx)$"},"./src sync ^\\.[\\\\/](?:README\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./README.mdx":"./src/README.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync ^\\.[\\\\/](?:README\\.mdx)$"},"?57de":()=>{},"?715e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./.yarn/__virtual__/@storybook-react-virtual-df8ec7087d/0/cache/@storybook-react-npm-6.5.9-c664590bb8-63c72547bb.zip/node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync ^\\.[\\\\/](?:README\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.(problem%7Csolution)\\.mdx)$")],module,!1)},"./src/DataStructure/Array/1D/DominantIndex/javascript/dominantIndex.es3.cjs":module=>{module.exports=function dominantIndex(nums){var i,num,largestNum=-1,largestIndex=-1;for(i=0;i<nums.length;i+=1)largestNum<(num=nums[i])&&(largestNum=num,largestIndex=i);for(i=0;i<nums.length;i+=1)if(i!==largestIndex&&2*nums[i]>largestNum)return-1;return largestIndex}},"./src/DataStructure/Array/1D/PivotIndex/javascript/pivotIndex.es3.cjs":module=>{module.exports=function(nums){var i,total=0,left=0;for(i=0;i<nums.length;i+=1)total+=nums[i];for(i=0;i<nums.length;i+=1){if(left===total-nums[i]-left)return i;left+=nums[i]}return-1}},"./src/DataStructure/Array/1D/PlusOne/javascript/plusOne.es3.cjs":module=>{module.exports=function plusOne(digits){var i,digit,temp;for(i=digits.length-1;i>=0;i-=1){if(9!==(digit=digits[i]))return digits[i]=digit+1,digits;digits[i]=0}for(digits.push(1),i=0;i<digits.length-1;i+=1)temp=digits[i+1],digits[i+1]=digits[i];return digits[0]=temp,digits}},"./src/DataStructure/Array/2D/FindDiagonalOrder/javascript/findDiagonalOrder.es3.cjs":module=>{module.exports=function findDiagonalOrder(mat){var k,m=mat.length,n=mat[0].length,result=[],i=0,j=0,a=-1,b=1;if(1===m){for(i=0;i<n;i+=1)result.push(mat[0][i]);return result}if(1===n){for(i=0;i<m;i+=1)result.push(mat[i][0]);return result}for(result.push(mat[i][j]),k=1;k<m*n;k+=1)j+=b,(i+=a)===m?(a*=-1,b*=-1,i-=1,j+=2):j===n?(a*=-1,b*=-1,i+=2,j-=1):i<0?(a*=-1,b*=-1,i+=1):j<0&&(a*=-1,b*=-1,j+=1),result.push(mat[i][j]);return result}},"./src/DataStructure/LinkedList/MyLinkedList/javascript/MyLinkedList.es3.cjs":module=>{var Node=function Node(val,next){this.val=val,this.next=next||null},MyLinkedList=function MyLinkedList(){this.head=null};MyLinkedList.prototype.get=function get(index){var i,ptr;for(i=0,ptr=this.head;null!=ptr;ptr=ptr.next){if(index===i)return ptr.val;i+=1}return-1},MyLinkedList.prototype.addAtHead=function addAtHead(val){return null===this.head?this.head=new Node(val):this.head=new Node(val,this.head),null},MyLinkedList.prototype.addAtTail=function addAtTail(val){var prev,ptr;if(null===this.head)this.addAtHead(val);else{for(ptr=(prev=this.head).next;null!=ptr;prev=ptr,ptr=ptr.next);prev.next=new Node(val)}return null},MyLinkedList.prototype.addAtIndex=function addAtIndex(index,val){var i,prev,ptr,node;if(0===index)return this.addAtHead(val);if(null===this.head)return null;for(i=1,ptr=(prev=this.head).next;null!=ptr&&index!==i;i+=1,prev=ptr,ptr=ptr.next);return index<=i+1&&(node=new Node(val),prev.next=node,node.next=ptr),null},MyLinkedList.prototype.deleteAtIndex=function deleteAtIndex(index){var i,prev,ptr;if(null===this.head)return null;if(0===index)return this.head=this.head.next,null;for(i=1,ptr=(prev=this.head).next;null!=ptr;i+=1,prev=ptr,ptr=ptr.next)if(index===i){prev.next=ptr.next;break}return null},module.exports=MyLinkedList},"./storybook-init-framework-entry.js":(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./.yarn/__virtual__/@storybook-react-virtual-df8ec7087d/0/cache/@storybook-react-npm-6.5.9-c664590bb8-63c72547bb.zip/node_modules/@storybook/react/dist/esm/client/index.js")}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[28],(()=>(__webpack_exec__("./.yarn/__virtual__/@storybook-core-client-virtual-f84eb36fc1/0/cache/@storybook-core-client-npm-6.5.9-c84723b5c8-1099e83736.zip/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-core-client-virtual-f84eb36fc1/0/cache/@storybook-core-client-npm-6.5.9-c84723b5c8-1099e83736.zip/node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-react-virtual-df8ec7087d/0/cache/@storybook-react-npm-6.5.9-c664590bb8-63c72547bb.zip/node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-react-virtual-df8ec7087d/0/cache/@storybook-react-npm-6.5.9-c664590bb8-63c72547bb.zip/node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-links-virtual-c759411376/0/cache/@storybook-addon-links-npm-6.5.9-f1c9f708fa-3bc5901d94.zip/node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-docs-virtual-e860d80a92/0/cache/@storybook-addon-docs-npm-6.5.9-78a139f645-f1969c8d18.zip/node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-actions-virtual-896cdb39d5/0/cache/@storybook-addon-actions-npm-6.5.9-5a5ed4dab3-155b439ba2.zip/node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-backgrounds-virtual-896cd8b3f8/0/cache/@storybook-addon-backgrounds-npm-6.5.9-b58546ad8d-1b8d78da70.zip/node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-measure-virtual-bfa1109cf8/0/cache/@storybook-addon-measure-npm-6.5.9-81d2eb1866-257f6f2cef.zip/node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-outline-virtual-49eb93dca1/0/cache/@storybook-addon-outline-npm-6.5.9-a2249d3824-f4aabb954c.zip/node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.yarn/__virtual__/@storybook-addon-interactions-virtual-7c0102337d/0/cache/@storybook-addon-interactions-npm-6.5.9-2fd80b43f7-a41611b991.zip/node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"))));__webpack_require__.O()}]);